{"version":3,"sources":["components/panel/Panel.js","components/modal/Modal.js","components/table/Table.js","App.js","index.js"],"names":["Panel","props","_props$state","state","months","date","flag","currentMonth","react_default","a","createElement","className","onClick","returnMonth","concat","click","Modal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","value","eventBase","e","target","console","log","setState","_this2","_this$props","title","isOpen","onCancel","onSubmit","Fragment","onChange","handleChange","React","Component","Table","monthChanger","_this$state","counter","prevState","daysAmount","Date","getDate","firstDay","getDay","length","addEvent","openModal","firstChild","handleCancel","today","getFullYear","getMonth","daysAmountOfCurrentMonth","firstDayOfCurrentMonth","days","_this$state2","objectSpread","_this$state3","thead","map","day","key","tbody","Array","fill","item","index","id","hidden","cells","i","push","panel_Panel","backToReality","cell","modal_Modal","App","components_table_Table","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fec1c5c0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Panel.css\";\n\nfunction Panel(props) {\n  const { months, date, flag, currentMonth } = props.state;\n  return (\n    <div className=\"panel\">\n      <button onClick={props.returnMonth}>Today</button>\n      <div>\n        {flag\n          ? `${months[currentMonth - 1]} ${date[0]}`\n          : `${months[date[1] - 1]} ${date[0]}`}\n      </div>\n      <button className=\"increment\" onClick={props.click}>\n        {\">\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Panel;\n","import React from \"react\";\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      eventBase: {}\n    };\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    console.log(target.value);\n    this.setState({\n      value: target.value\n    });\n  }\n\n  render() {\n    const { title, isOpen, onCancel, onSubmit } = this.props;\n    const { value } = this.state;\n    return (\n      <>\n        {isOpen && (\n          <div className=\"modalOverlay\">\n            <div className=\"modalWindow\">\n              <div className=\"modalHeader\">\n                <div className=\"modalTitle\">{title}</div>\n              </div>\n              <div className=\"modalBody\">\n                <p>{value}</p>\n                <input onChange={e => this.handleChange(e)} />\n              </div>\n              <div className=\"modalFooter\">\n                <button onClick={onCancel}>Cancel</button>\n                <button onClick={onSubmit}>Save</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport \"./Table.css\";\n\nimport Panel from \"../panel/Panel\";\nimport Modal from \"../modal/Modal\";\n\nclass Table extends Component {\n  constructor() {\n    super();\n    let today = new Date();\n    let date = [\n      today.getFullYear(),\n      today.getMonth() + 1,\n      today.getDate(),\n      today.getDay()\n    ];\n    let daysAmountOfCurrentMonth = new Date(date[0], date[1], 0).getDate();\n    let firstDayOfCurrentMonth = new Date(date[0], date[1] - 1, 0).getDay();\n\n    this.state = {\n      months: [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ],\n      days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n      date: date,\n      daysAmount: daysAmountOfCurrentMonth,\n      firstDay: firstDayOfCurrentMonth,\n      currentMonth: date[1],\n      flag: false,\n      isOpen: false,\n      eventBase: {}\n    };\n  }\n\n  monthChanger = () => {\n    const { date, months } = this.state;\n    let counter = date[1];\n\n    this.setState(prevState => {\n      prevState.daysAmount = new Date(date[0], counter + 1, 0).getDate();\n      prevState.firstDay = new Date(date[0], counter, 0).getDay();\n      prevState.flag = false;\n    });\n\n    if (counter === months.length) {\n      counter = 0;\n      this.setState(prevState => (prevState.date[1] = counter));\n    }\n\n    if (counter <= months.length - 1) {\n      this.setState(prevState => (prevState.date[1] = ++counter));\n    }\n  };\n\n  backToReality() {\n    const { date, currentMonth } = this.state;\n    let daysAmount = new Date(date[0], currentMonth, 0).getDate();\n    let firstDay = new Date(date[0], currentMonth - 1, 0).getDay();\n\n    console.log(\"click\", this.state.date[1]);\n\n    this.setState(prevState => (prevState.date[1] = currentMonth));\n\n    this.setState({\n      ...this.state,\n      daysAmount: daysAmount,\n      firstDay: firstDay,\n      flag: true\n    });\n    this.setState(prevState => {\n      prevState.flag = false;\n    });\n  }\n\n  addEvent = () => {\n    this.setState({ isOpen: false });\n    console.log(`Your event was saved`);\n  };\n\n  openModal = e => {\n    let target = e.target;\n    if (target.className !== \"calendar\") {\n      this.setState({ isOpen: true });\n      console.log(target.firstChild);\n    }\n  };\n\n  handleCancel = () => {\n    console.log(\"Cancel function!\");\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    const { days, daysAmount, firstDay, date, currentMonth } = this.state;\n\n    let thead = days.map(day => {\n      return (\n        <div key={day} className=\"calendar__thead\">\n          {day}\n        </div>\n      );\n    });\n    let tbody = Array(daysAmount)\n      .fill(null)\n      .map((item, index) => {\n        return (\n          <div\n            id={`day${index + 1}`}\n            key={index}\n            className={\n              index === date[2] - 1 && date[1] === currentMonth\n                ? \"calendar__tbody today \"\n                : \"calendar__tbody\"\n            }\n          >\n            {index + 1}\n            <span hidden />\n          </div>\n        );\n      });\n\n    let cells = [];\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(\n        <div key={\"empty\" + i} className=\"emptyCell\">\n          {\"\"}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <Panel\n          state={this.state}\n          click={this.monthChanger}\n          returnMonth={() => this.backToReality()}\n        />\n        <div className=\"calendar\" onClick={this.openModal}>\n          {thead}\n          {cells.map(cell => cell)}\n          {tbody}\n        </div>\n        <Modal\n          title=\"Test Dialog window\"\n          isOpen={this.state.isOpen}\n          onCancel={this.handleCancel}\n          onSubmit={this.addEvent}\n        />\n      </>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\n\nimport Table from \"./components/table/Table\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}